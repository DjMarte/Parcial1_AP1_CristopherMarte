@page "/Editmetas"
@page "/Editmetas/MetaId={metaId:int}"
@inject MetaService metaService
@rendermode InteractiveServer
@inject NavigationManager navigation

<PageTitle>Editar Meta</PageTitle>
<EditForm Model="meta" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	<!--Header-->
	<div class="card-header">
		<h3><strong>Editar Metas</strong></h3>
	</div>
	<!--Body-->
	<div>
		<!--Meta Id:-->
		<div class="mb-4">
			<div class="col-5">
				<label class="form-label" for="metaId"><strong>Meta Id:</strong></label>
				<InputNumber class="form-control" id="metaid" @bind-Value="meta.MetaId"></InputNumber>
			</div>
		</div>
		<!--Fecha-->
		<div class="mb-4">
			<div class="col-5">
				<label class="form-label" for="fecha"><strong>Fecha:</strong></label>
				<InputDate class="form-control" id="fecha" @bind-Value="meta.Fecha"></InputDate>
				<ValidationMessage For="@(() => meta.Fecha)"></ValidationMessage>
			</div>
		</div>
		<!--Descripción-->
		<div class=" mb-4">
			<div class="col-5">
				<label class="form-label" for="descripcion"><strong>Descripci&oacute;n</strong></label>
				<InputTextArea class="form-control" id="descripcion" @bind-Value="meta.Descripcion"></InputTextArea>
				<ValidationMessage For="@(() => meta.Descripcion)"></ValidationMessage>
			</div>
		</div>
		<!--Monto-->
		<div class="mb-3">
			<div class="col-4">
				<label class="form-label" for="monto"><strong>Monto:</strong></label>
				<InputNumber class="form-control" id="monto" @bind-Value="meta.Monto"></InputNumber>
				<ValidationMessage For="@(() => meta.Monto)"></ValidationMessage>
			</div>
		</div>
		<!--Footer-->
		<div class="card-footer">
			<button type="submit" class="btn btn-success btn-create"><i class="bi bi-floppy-fill"></i> Modificar</button>
			<button type="button" class="btn btn-primary btn-back" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
		</div>

	</div>
	@mensaje
</EditForm>

@code {
	[Parameter]
	public int metaId { get; set; }
	public Metas meta { get; set; } = new Metas();
	public string? mensaje { get; set; }

	protected override async Task OnInitializedAsync() {
		meta = await metaService.Buscar(metaId);
	}

	public async Task Modificar() {
		var modificar = await metaService.Crear(meta);
		if (modificar) {
			mensaje = "La meta se ha actualizado con éxito";
			await Task.Delay(2000);
			Volver();
		}
		else
			mensaje = "La meta no se ha actualizado correctamente";
	}
	public void Volver() {
		navigation.NavigateTo("/Detailsmetas");
	}
}
